diff -dur pyvorbis-1.4.orig/src/pyvorbiscodec.c pyvorbis-1.4/src/pyvorbiscodec.c
--- pyvorbis-1.4.orig/src/pyvorbiscodec.c	2003-05-13 10:17:13.000000000 +0200
+++ pyvorbis-1.4/src/pyvorbiscodec.c	2011-12-21 10:30:52.000000000 +0100
@@ -118,7 +118,7 @@
 {
   vorbis_dsp_clear(PY_DSP(self));
   Py_XDECREF(((py_dsp *)self)->parent);
-  PyMem_DEL(self);
+  PyObject_Del(self);
 }
 
 static PyObject*
@@ -447,7 +447,7 @@
 {
   vorbis_block_clear(PY_BLOCK(self));
   Py_XDECREF(((py_block *)self)->parent);
-  PyMem_DEL(self);
+  PyObject_Del(self);
 }
 
 static PyObject*
diff -dur pyvorbis-1.4.orig/src/pyvorbisfile.c pyvorbis-1.4/src/pyvorbisfile.c
--- pyvorbis-1.4.orig/src/pyvorbisfile.c	2003-12-19 08:11:02.000000000 +0100
+++ pyvorbis-1.4/src/pyvorbisfile.c	2011-12-21 10:31:49.000000000 +0100
@@ -171,7 +171,7 @@
 
   ret = py_ov_open(newobj, args);
   if (ret == NULL) {
-    PyMem_DEL(newobj);
+    PyObject_Del(newobj);
     return NULL;
   } else
     Py_DECREF(ret);
@@ -191,11 +191,11 @@
        close */
     Py_DECREF(py_self->py_file);
   } else {
-    /* Otherwise, we opened the file and should close it. */
-    fclose(py_self->c_file);
+    /* Do NOT close the file -- ov_open() takes ownership of the FILE*,
+     * and ov_close() is responsible for closing it. */
   }
 
-  PyMem_DEL(self);
+  PyObject_Del(self);
 }
 
 static PyObject *
diff -dur pyvorbis-1.4.orig/src/pyvorbisinfo.c pyvorbis-1.4/src/pyvorbisinfo.c
--- pyvorbis-1.4.orig/src/pyvorbisinfo.c	2003-12-19 08:51:36.000000000 +0100
+++ pyvorbis-1.4/src/pyvorbisinfo.c	2011-12-21 10:30:52.000000000 +0100
@@ -134,7 +134,7 @@
 static void
 py_ov_info_dealloc(PyObject *self)
 {
-  PyMem_DEL(self);
+  PyObject_Del(self);
 }
 
 #define CMP_RET(x) \
@@ -418,7 +418,7 @@
     free(ovc_self->vc);
   }
 
-  PyMem_DEL(self);
+  PyObject_Del(self);
 }
 
 
@@ -999,6 +999,7 @@
 #if PY_UNICODE
       item = PyUnicode_DecodeUTF8(val, vallen, NULL);
       if (!item) {
+        PyErr_Clear();
         /* To deal with non-UTF8 comments (against the standard) */
         item = PyString_FromStringAndSize(val, vallen); 
       } 
